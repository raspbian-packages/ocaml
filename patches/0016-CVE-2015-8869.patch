Description: patch for CVE-2015-8869
  difference to upstream: no need to patch byterun/intern.c
Index: ocaml-3.12.1/byterun/alloc.c
===================================================================
--- ocaml-3.12.1.orig/byterun/alloc.c	2016-05-11 19:37:35.000000000 +0200
+++ ocaml-3.12.1/byterun/alloc.c	2016-05-11 19:37:34.000000000 +0200
@@ -147,7 +147,7 @@
 
 CAMLprim value caml_alloc_dummy(value size)
 {
-  mlsize_t wosize = Int_val(size);
+  mlsize_t wosize = Long_val(size);
 
   if (wosize == 0) return Atom(0);
   return caml_alloc (wosize, 0);
@@ -155,7 +155,7 @@
 
 CAMLprim value caml_alloc_dummy_float (value size)
 {
-  mlsize_t wosize = Int_val(size) * Double_wosize;
+  mlsize_t wosize = Long_val(size) * Double_wosize;
 
   if (wosize == 0) return Atom(0);
   return caml_alloc (wosize, 0);
Index: ocaml-3.12.1/byterun/str.c
===================================================================
--- ocaml-3.12.1.orig/byterun/str.c	2016-05-11 19:37:35.000000000 +0200
+++ ocaml-3.12.1/byterun/str.c	2016-05-11 19:37:34.000000000 +0200
@@ -123,7 +123,7 @@
 CAMLprim value caml_blit_string(value s1, value ofs1, value s2, value ofs2,
                                 value n)
 {
-  memmove(&Byte(s2, Long_val(ofs2)), &Byte(s1, Long_val(ofs1)), Int_val(n));
+  memmove(&Byte(s2, Long_val(ofs2)), &Byte(s1, Long_val(ofs1)), Long_val(n));
   return Val_unit;
 }
 
@@ -150,6 +150,6 @@
 
 CAMLprim value caml_bitvect_test(value bv, value n)
 {
-  int pos = Int_val(n);
+  intnat pos = Long_val(n);
   return Val_int(Byte_u(bv, pos >> 3) & (1 << (pos & 7)));
 }
